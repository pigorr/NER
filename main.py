import json
import codecs
from natasha import (
    NamesExtractor,
    OrganisationExtractor,
    LocationExtractor
)
from natasha.markup import format_json
import numpy as np
import matplotlib.pyplot as plt

text = 'Посол Израиля на Украине Йоэль Лион признался, что пришел в шок, узнав о решении властей Львовской области ' \
       'объявить 2019 год годом лидера запрещенной в России Организации украинских националистов (ОУН) Степана Бандеры.' \
       ' Свое заявление он разместил в Twitter. «Я не могу понять, как прославление тех, кто непосредственно принимал' \
       ' участие в ужасных антисемитских преступлениях, помогает бороться с антисемитизмом и ксенофобией. ' \
       'Украина не должна забывать о преступлениях, совершенных против украинских евреев, и никоим образом не отмечать ' \
       'их через почитание их исполнителей», — написал дипломат. 11 декабря Львовский областной совет принял решение ' \
       'провозгласить 2019 год в регионе годом Степана Бандеры в связи с празднованием 110-летия со дня рождения лидера' \
       ' ОУН (Бандера родился 1 января 1909 года). В июле аналогичное решение принял Житомирский областной совет. ' \
       'В начале месяца с предложением к президенту страны Петру Порошенко вернуть Бандере звание Героя Украины ' \
       'обратились депутаты Верховной Рады. Парламентарии уверены, что признание Бандеры национальным героем ' \
       'поможет в борьбе с подрывной деятельностью против Украины в информационном поле, а также остановит ' \
       '«распространение мифов, созданных российской пропагандой». Степан Бандера (1909-1959) был одним из ' \
       'лидеров Организации украинских националистов, выступающей за создание независимого государства на территориях' \
       ' с украиноязычным населением. В 2010 году в период президентства Виктора Ющенко Бандера был посмертно признан' \
       ' Героем Украины, однако впоследствии это решение было отменено судом. '


# source_file = open('sourse.txt', encoding='utf-8', mode='r')
# text_from_file = source_file.read()
# source_file.close()
# names_extractor = NamesExtractor()
# organisation_extractor = OrganisationExtractor()
# location_extractor = LocationExtractor()
# matches = names_extractor(text_from_file)
#
# facts = [_.fact.as_json for _ in matches]
# print(facts)
# names = [fact["name"] for fact in facts]
#
# print(names)
# result = format_json(facts)




